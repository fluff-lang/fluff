name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO: maybe NOT assuming everyone is on 64-bit
        include:
          - { os: ubuntu-latest,  compiler: gcc,       shell: 'bash'      }
          - { os: ubuntu-latest,  compiler: clang,     shell: 'bash'      }
          - { os: macos-latest,   compiler: gcc,       shell: 'bash'      }
          - { os: macos-latest,   compiler: clang,     shell: 'bash'      }
          - { os: windows-latest, compiler: mingw-w64, shell: 'msys2 {0}' }
    steps:
      - uses: actions/checkout@master

      - name: Setup reusable strings
        id: strings
        shell: bash
        run: |
          echo "build_output=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Setup MSYS2 (Windows only)
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: git gcc cmake
        if: matrix.compiler == 'mingw-w64'
      
      - name: Configure CMake
        shell: ${{ matrix.shell }}
        run: >
          cmake -B ${{ steps.strings.outputs.build_output }}
          -DCMAKE_C_COMPILER=${{ matrix.compiler }}
          -DCMAKE_BUILD_TYPE=Release
          -S ${{ github.workspace }}

      - name: Build
        shell: ${{ matrix.shell }}
        run: cmake --build ${{ steps.strings.outputs.build_output }} --config Release

      - name: List Artifacts
        shell: ${{ matrix.shell }}
        run: ls ${{ steps.strings.outputs.build_output }}

      - name: Archive Artifacts
        uses: actions/upload-artifact@master
        with:
          name: fluff-${{ matrix.os }}-${{ matrix.compiler }}
          path: ${{ steps.strings.outputs.build_output }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build_output }}
        run: ctest --build-config Release

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: fluff-${{ matrix.os }}-${{ matrix.compiler }}
          path: ${{ steps.strings.outputs.build_output }}