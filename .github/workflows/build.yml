name: Build workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: clang
          # - os: macos-latest
          #   c_compiler: gcc
          # - os: macos-latest
          #   c_compiler: clang
    steps:
      - uses: actions/checkout@v4
      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
      - name: List Artifacts
        run: ls ${{ steps.strings.outputs.build-output-dir }}
      - name: Archive Artifacts
        uses: actions/upload-artifact@v4.5.0
        with:
          name: fluff-archive
          path: ${{ steps.strings.outputs.build-output-dir }}
      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }}
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: fluff-archive
          path: ${{ steps.strings.outputs.build-output-dir }}